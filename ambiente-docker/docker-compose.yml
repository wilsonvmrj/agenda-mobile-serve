version: '3'

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

volumes:
  postgres:
    driver: local
  redis:
    driver: local
  docker-in-docker:
    driver: local

services:
### POSTGRESQL ###########################################
    postgres:
      image: kartoza/postgis
      container_name: postgis
      volumes:
        - ${DATA_PATH_HOST}/postgres:/var/lib/postgresql
      ports:
        - "${POSTGRES_PORT}:5432"
      environment:
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        - POSTGRES_DB=${POSTGRES_DB}
      restart: always
      networks:
        - backend

### REDIS ################################################
    redis:
      image: redis:alpine
      container_name: redis
      command: redis-server --requirepass ${REDIS_PASSWORD}
      volumes:
        - ${DATA_PATH_HOST}/redis:/data
      ports:
        - "${REDIS_PORT}:6379"
      restart: always
      networks:
        - backend

### PGADMIN ##############################################
    pgadmin:
      image: dpage/pgadmin4:latest
      container_name: pgadmin
      environment:
        - "PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}"
        - "PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}"
      ports:
        - "${PGADMIN_PORT}:80"
      volumes:
        - ${DATA_PATH_HOST}/pgadmin:/var/lib/pgadmin
      depends_on:
        - postgres
      restart: always
      networks:
        - frontend
        - backend
